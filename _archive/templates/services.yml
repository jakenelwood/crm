http:
  routers:
    # Router for the API backend
    api-router:
      rule: "Host(`65.21.174.252`) && PathPrefix(`/api`)"
      service: "api-service"
      entryPoints:
        - websecure
      middlewares:
        - api-auth
      tls:
        certResolver: "myresolver"

    # Router for the frontend application
    frontend-router:
      rule: "Host(`65.21.174.252`)"
      service: "frontend-service"
      entryPoints:
        - websecure
      middlewares:
        - frontend-mw
      tls:
        certResolver: "myresolver"
      priority: 1  # Lower priority than API to ensure API routes take precedence

    # Router for Traefik dashboard (secure access)
    dashboard-router:
      rule: "Host(`65.21.174.252`) && (PathPrefix(`/api/dashboard`) || PathPrefix(`/dashboard`))"
      service: "api@internal"
      entryPoints:
        - websecure
      middlewares:
        - dashboard-auth
      tls:
        certResolver: "myresolver"

  services:
    # Service for the API backend
    api-service:
      loadBalancer:
        servers:
          - url: "http://backend:8000"
        passHostHeader: true
        healthCheck:
          path: "/api/health-check"
          interval: "10s"
          timeout: "5s"
          retries: 3

    # Service for the frontend application
    frontend-service:
      loadBalancer:
        servers:
          - url: "http://frontend:3000"
        passHostHeader: true

  middlewares:
    # Basic authentication for Traefik dashboard
    dashboard-auth:
      basicAuth:
        users:
          - "admin:$apr1$ruca84Hq$mbjdMZBAG.KWn7vfN/SNK/"  # Change this in production (user: admin, password: admin) 