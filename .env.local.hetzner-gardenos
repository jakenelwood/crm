# 🏢 CRM Application Environment Configuration - Hetzner GardenOS Development
# Updated configuration to connect localhost:3000 to Hetzner GardenOS development environment
# This implements the development strategy from docs/database/gardenOS_dev_vs_production.md

# =============================================================================
# BRANDING
# =============================================================================
NEXT_PUBLIC_BRAND_NAME=Twincigo
NEXT_PUBLIC_BRAND_TAGLINE=The Pipeline Whisperer

# =============================================================================
# DATABASE CONNECTION (Hetzner GardenOS Development - HAProxy HA Simulation)
# =============================================================================
# Connect via HAProxy (multi-node HA simulation for development)
DATABASE_URL=postgresql://postgres:POSTGRES_PASSWORD_FROM_SERVER@5.161.110.205:5000/crm

# =============================================================================
# AUTHENTICATION (Hetzner Supabase Auth)
# =============================================================================
# Connect to Supabase services running on Hetzner
NEXT_PUBLIC_SUPABASE_URL=http://5.161.110.205:3000
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU

# =============================================================================
# RINGCENTRAL INTEGRATION
# =============================================================================
# Required: Get these from RingCentral Developer Portal
RINGCENTRAL_CLIENT_ID=your_ringcentral_client_id
RINGCENTRAL_CLIENT_SECRET=your_ringcentral_client_secret

# Server URL (usually production)
RINGCENTRAL_SERVER=https://platform.ringcentral.com

# OAuth Scopes (space-separated, no commas)
RINGCENTRAL_OAUTH_SCOPES=SMS ReadCallLog ReadMessages ReadPresence RingOut

# OAuth Redirect URI (auto-constructed from NEXT_PUBLIC_APP_URL if not set)
# REDIRECT_URI=http://localhost:3000/oauth-callback

# Required: Default phone number for outbound calls (E.164 format)
RINGCENTRAL_FROM_NUMBER=+1234567890

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME="Insurance CRM"

# Development mode (testing against production backend)
NODE_ENV=development

# =============================================================================
# HETZNER GARDENOS SERVICES
# =============================================================================
# HAProxy endpoints
HAPROXY_PRIMARY_URL=postgresql://postgres:PASSWORD@5.161.110.205:5000/crm
HAPROXY_REPLICA_URL=postgresql://postgres:PASSWORD@5.161.110.205:5001/crm
HAPROXY_STATS_URL=http://5.161.110.205:7000/stats

# Supabase services on Hetzner
SUPABASE_AUTH_URL=http://5.161.110.205:9999
SUPABASE_REALTIME_URL=http://5.161.110.205:4000
SUPABASE_STORAGE_URL=http://5.161.110.205:5000
SUPABASE_STUDIO_URL=http://5.161.110.205:3001

# Direct PostgreSQL access (for debugging only)
POSTGRES_NODE_1_URL=postgresql://postgres:PASSWORD@5.161.110.205:5432/crm
POSTGRES_NODE_2_URL=postgresql://postgres:PASSWORD@5.161.110.205:5433/crm
POSTGRES_NODE_3_URL=postgresql://postgres:PASSWORD@5.161.110.205:5434/crm

# =============================================================================
# ORGANIZATION SETUP (Multi-tenant)
# =============================================================================
# For initial setup - these will be created in the database
DEFAULT_ORGANIZATION_NAME="Your Insurance Agency"
DEFAULT_ORGANIZATION_TYPE=Agency
DEFAULT_LOCATION_NAME="Main Office"

# =============================================================================
# FEATURE FLAGS
# =============================================================================
ENABLE_MULTI_TENANT=true
ENABLE_FOLLOW_UP_SYSTEM=true
ENABLE_QUOTE_MANAGEMENT=true
ENABLE_COMMERCIAL_LINES=true
ENABLE_AI_FEATURES=true

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================
# Email service (for notifications)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=

# SMS service (for text messaging)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=

# =============================================================================
# SECURITY
# =============================================================================
NEXTAUTH_SECRET=your_nextauth_secret_here
NEXTAUTH_URL=http://localhost:3000
JWT_SECRET=your-super-secret-jwt-key-for-development-only-change-in-production

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# Enable debug logging
DEBUG_MODE=true
LOG_LEVEL=info

# Database query logging (reduced since connecting to production)
LOG_DATABASE_QUERIES=false

# =============================================================================
# GARDENOS ARCHITECTURE NOTES
# =============================================================================
# This configuration implements the GardenOS architecture recommendations:
#
# ✅ Patroni: 3-node PostgreSQL cluster with automatic failover
# ✅ HAProxy: Load balancer routing to current PostgreSQL leader
# ✅ Supabase: Auth, REST API, Realtime, Storage (minus analytics)
# ✅ High Availability: Automatic failover and leader election
# ✅ Phase 1: Using Supabase minus analytics (per strategy document)
#
# Connection Flow:
# localhost:3000 -> Hetzner HAProxy:5000 -> Patroni Leader -> PostgreSQL
#
# Benefits:
# - High availability with automatic failover
# - Load balancing across PostgreSQL replicas
# - Modular architecture for future evolution
# - Production-grade setup for testing
#
# Future Evolution (as per strategy document):
# - Phase 2: Replace PostgREST with FastAPI
# - Phase 3: Replace Supabase Auth (optional)
# - Phase 4: Replace Supabase Storage
# - Phase 5: Build custom admin panel

# =============================================================================
# MONITORING ENDPOINTS
# =============================================================================
# HAProxy Statistics
HAPROXY_STATS_ENDPOINT=http://5.161.110.205:7000/stats

# Patroni REST API endpoints
PATRONI_NODE_1_API=http://5.161.110.205:8008
PATRONI_NODE_2_API=http://5.161.110.205:8009
PATRONI_NODE_3_API=http://5.161.110.205:8010

# Health check endpoints
CLUSTER_HEALTH_CHECK=http://5.161.110.205:8080/health
CLUSTER_STATUS_CHECK=http://5.161.110.205:8081

# =============================================================================
# DEPLOYMENT INFORMATION
# =============================================================================
DEPLOYMENT_ENVIRONMENT=hetzner-gardenos
DEPLOYMENT_ARCHITECTURE=patroni-haproxy-supabase
DEPLOYMENT_PHASE=phase-1-minus-analytics
LAST_UPDATED=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
